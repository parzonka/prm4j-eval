#!/usr/bin/env bash
#
# Runs the DaCapo-9.12-bach benchmark in {avrora batik eclipse fop h2 jython luindex 
# pmd sunflow tomcat tradebeans tradesoap xalan} without additions to obtain statistically
# rigorous runtime performance measures.
#

#
# usage:  ./baseline           (parameterless)
#
# notes:  A list of all benchmarks can be found at http://dacapobench.org/benchmarks.html
#         Benchmark "lusearch" is not used because of random crashes in lucine on the evaluation hardware.
#
#

# remember directory where this script is called (some benchmarks need absolute paths)
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

echo "Resolving maven dependencies... (may take a while)"
mvn -q dependency:resolve --update-snapshots

# get and process classpath from maven pom
mvn -q dependency:build-classpath -Dmdep.outputFile=dependency-outputfile
tr ':' '\n' < dependency-outputfile > dependency-list
DACAPO=$(grep "dacapo" dependency-list)
GUAVA=$(grep "guava" dependency-list)
APACHEMATH=$(grep "math3" dependency-list)

# cleanup tempfiles
rm dependency-outputfile dependency-list

# create dir for logs
mkdir -p logs

# create jar with callback
javac src/main/java/prm4jeval/* -d target/classes -cp $DACAPO:$APACHEMATH:$GUAVA
jar cf target/jars/Callback.jar -C target/classes .

# run 16 invocations with up to 25 iterations
for i in {0..15}; do
	for benchmark in avrora batik eclipse fop h2 jython luindex pmd sunflow tomcat tradebeans tradesoap xalan ; do
	STATUS=0
		while [ $STATUS -eq 0 ]; do
    		echo "Starting benchmark [baseline:$benchmark] measurement $i..."
			java -Xms256M -Xmx2048M \
				-Dprm4jeval.outputfile=logs/baseline.log \
				-Dprm4jeval.invocation=$i \
				-Dprm4jeval.benchmark=$benchmark -Dprm4jeval.parametricProperty=- \
				-cp $DACAPO:$GUAVA:$APACHEMATH:${DIR}/target/jars/Callback.jar \
				Harness --no-validation -c prm4jeval.EvalCallback $benchmark
			STATUS=$?
		done
	done
done
